geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 10
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros * num_meses)
# Simulación de réplicas basadas en la posterior
set.seed(42)
simulated_bites <- rbinom(10000, size = num_carteros * num_meses, prob = samples)
simulated_ratios <- simulated_bites / (num_carteros * num_meses)
# Gráfico de densidad comparativa
library(ggplot2)
ggplot() +
geom_density(aes(simulated_ratios), fill = "blue", alpha = 0.5) +
geom_vline(aes(xintercept = ratio.real), color = "red", linetype = "dashed", size = 1.2) +
labs(
title = "Comparación del Ratio de Carteros Mordidos",
x = "Ratio de Mordidas",
y = "Densidad"
) +
theme_minimal()
p <- p_grid[which.max(posterior)]
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
abline(v = 248, col = "red")
HPDI(samples, 0.95)
p <- p_grid[which.max(posterior)]
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
abline(v = 248, col = "red")
HPDI(samples, 0.95)
p <- p_grid[which.max(posterior)]
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
abline(v = 248, col = "red")
grid_len <- 1000
p_grid <- seq( from=0, to=1, length.out= grid_len)
prior <- rep(1, grid_len)
likelihood <- dbinom(6, 10 , p_grid)
unstd.posterior <- likelihood *prior
posterior <- unstd.posterior/sum(unstd.posterior)
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
dens(samples)
HPDI(samples, 0.95)
p <- p_grid[which.max(posterior)]
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
abline(v = 248, col = "red")
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
bites_1 <- df$bites_month_1
bites_2 <- df$bites_month_2
data <- c(bites_1, bites_2)
n_data <- length(data)
n_bites <- sum(data)
p_grid <- seq(from = 0, to = 1, length.out = n_data)
prior <- rep(1, n_data)
likelihood <- dbinom(x = n_bites, size = n_data, prob = p_grid)
posterior <- likelihood * prior
posterior_std <- posterior / sum(posterior)
p <- p_grid[which.max(posterior_std)]
cat("max posterior:", max(posterior_std),
"\np:", p, "\n"
)
Usando el valor de $p$ encontrado, veamos si el modelo se ajusta a los datos
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
bites_1 <- df$bites_month_1
bites_2 <- df$bites_month_2
data <- c(bites_1, bites_2)
n_data <- length(data)
n_bites <- sum(data)
p_grid <- seq(from = 0, to = 1, length.out = n_data)
prior <- rep(1, n_data)
likelihood <- dbinom(x = n_bites, size = n_data, prob = p_grid)
posterior <- likelihood * prior
posterior_std <- posterior / sum(posterior)
p <- p_grid[which.max(posterior_std)]
cat("max posterior:", max(posterior_std),
"\np:", p, "\n"
)
Usando el valor de $p$ encontrado, veamos si el modelo se ajusta a los datos
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
bites_1 <- df$bites_month_1
bites_2 <- df$bites_month_2
data <- c(bites_1, bites_2)
n_data <- length(data)
n_bites <- sum(data)
p_grid <- seq(from = 0, to = 1, length.out = n_data)
prior <- rep(1, n_data)
likelihood <- dbinom(x = n_bites, size = n_data, prob = p_grid)
posterior <- likelihood * prior
posterior_std <- posterior / sum(posterior)
p <- p_grid[which.max(posterior_std)]
cat("max posterior:", max(posterior_std),
"\np:", p, "\n"
)
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
bites_1 <- df$bites_month_1
bites_2 <- df$bites_month_2
data <- c(bites_1, bites_2)
n_data <- length(data)
n_bites <- sum(data)
p_grid <- seq(from = 0, to = 1, length.out = n_data)
prior <- rep(1, n_data)
likelihood <- dbinom(x = n_bites, size = n_data, prob = p_grid)
posterior <- likelihood * prior
posterior_std <- posterior / sum(posterior)
p <- p_grid[which.max(posterior_std)]
cat("max posterior:", max(posterior_std),
"\np:", p, "\n"
)
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
dataMordidas <- read.csv("no+mordidas.csv", header = TRUE)
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros * num_meses)
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 10
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros * num_meses)
# Simulación de réplicas basadas en la posterior
set.seed(42)
simulated_bites <- rbinom(10000, size = num_carteros * num_meses, prob = samples)
simulated_ratios <- simulated_bites / (num_carteros * num_meses)
# Gráfico de densidad comparativa
library(ggplot2)
ggplot() +
geom_density(aes(simulated_ratios), fill = "blue", alpha = 0.5) +
geom_vline(aes(xintercept = ratio.real), color = "red", linetype = "dashed", size = 1.2) +
labs(
title = "Comparación del Ratio de Carteros Mordidos",
x = "Ratio de Mordidas",
y = "Densidad"
) +
theme_minimal()
p <- p_grid[which.max(posterior)]
simulation <- rbinom(n = 1e4, size = 500, prob = p)
hist(simulation, breaks = seq(from = min(simulation), to = max(simulation)))
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros * num_meses)
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- mean(samples)
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros * num_meses)
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- mean(samples)
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros * num_meses)
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros )
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Escogemos dos meses consecutivos, por ejemplo, el mes 1 y el mes 2
mes1 <- dataMordidas$bites_month_1
mes2 <- dataMordidas$bites_month_2
# Identificamos los carteros mordidos en el primer mes
mordidos_mes1 <- which(mes1 == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_repetidos <- sum(mes2[mordidos_mes1])
# Número total de carteros mordidos en el primer mes
total_mordidos_mes1 <- length(mordidos_mes1)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
p_mordido_repetido <- mordidos_repetidos / total_mordidos_mes1
# Simulación de 10,000 réplicas
set.seed(42)
simulaciones <- rbinom(10000, size = total_mordidos_mes1, prob = p_mordido_repetido)
# Gráfico comparativo de las simulaciones con el recuento real
library(ggplot2)
ggplot() +
geom_histogram(aes(simulaciones), bins = 30, fill = "blue", alpha = 0.5) +
geom_vline(aes(xintercept = mordidos_repetidos), color = "red", linetype = "dashed", size = 1.2) +
labs(
title = "Simulaciones vs Recuento Real de Carteros Mordidos",
x = "Recuento de Mordidas en el Segundo Mes",
y = "Frecuencia"
) +
theme_minimal()
# Escogemos dos meses consecutivos, por ejemplo, el mes 1 y el mes 2
mes1 <- dataMordidas$bites_month_1
mes2 <- dataMordidas$bites_month_2
# Identificamos los carteros mordidos en el primer mes
mordidos_mes1 <- which(mes1 == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_repetidos <- sum(mes2[mordidos_mes1])
# Número total de carteros mordidos en el primer mes
total_mordidos_mes1 <- length(mordidos_mes1)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
p_mordido_repetido <- mordidos_repetidos / total_mordidos_mes1
# Simulación de 10,000 réplicas
set.seed(42)
simulaciones <- rbinom(10000, size = total_mordidos_mes1, prob = p_mordido_repetido)
# Gráfico comparativo de las simulaciones con el recuento real
library(ggplot2)
ggplot() +
geom_histogram(aes(simulaciones), bins = 30, fill = "blue", alpha = 0.5) +
geom_vline(aes(xintercept = mordidos_repetidos), color = "red", linetype = "dashed", size = 1.2) +
labs(
title = "Simulaciones vs Recuento Real de Carteros Mordidos",
x = "Recuento de Mordidas en el Segundo Mes",
y = "Frecuencia"
) +
theme_minimal()
# Escogemos dos meses consecutivos, por ejemplo, el mes 1 y el mes 2
mes1 <- dataMordidas$bites_month_1
mes2 <- dataMordidas$bites_month_2
# Identificamos los carteros mordidos en el primer mes
mordidos_mes1 <- which(mes1 == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_repetidos <- sum(mes2[mordidos_mes1])
# Número total de carteros mordidos en el primer mes
total_mordidos_mes1 <- length(mordidos_mes1)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
p_mordido_repetido <- mordidos_repetidos / total_mordidos_mes1
# Simulación de 10,000 réplicas
set.seed(42)
simulaciones <- rbinom(10000, size = total_mordidos_mes1, prob = p_mordido_repetido)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_repetidos), color="red")
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_mes1 <- length(mordidos_mes1)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
p_mordido_repetido <- mordidos_repetidos / total_mordidos_mes1
# Simulación de 10,000 réplicas
set.seed(42)
simulaciones <- rbinom(10000, size = total_mordidos_mes1, prob = p_mordido_repetido)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_repetidos), color="red")
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_primer_mes <- length(mordidos_primer_mes)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
posterior <- mordidos_condicionados / total_mordidos_primer_mes
# Simulación de 10,000 réplicas
simulaciones <- rbinom(10000, size = total_mordidos_mes1, prob = posterior)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_condicionados), color="red")
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_primer_mes <- length(mordidos_primer_mes)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
posterior <- mordidos_condicionados / total_mordidos_primer_mes
# Simulación de 10,000 réplicas
simulaciones <- rbinom(10000, size = total_mordidos_primer_mes, prob = posterior)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_condicionados), color="red")
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_primer_mes <- length(mordidos_primer_mes)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
posterior <- mordidos_condicionados / total_mordidos_primer_mes
# Simulación de 10,000 réplicas
simulaciones <- rbinom(10000, size = total_mordidos_primer_mes, prob = posterior)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_condicionados), color="red")
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Recuento de carteros mordidos en el segundo mes, condicionado a que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_primer_mes <- length(mordidos_primer_mes)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
posterior <- mordidos_condicionados / total_mordidos_primer_mes
# Simulación de 10,000 réplicas
simulaciones <- rbinom(1e4, size = total_mordidos_primer_mes, prob = posterior)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_condicionados), color="red")
total_mordidos_primer_mes
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
cols <- c("bites_month_1", "bites_month_2", "bites_month_3",
"bites_month_4", "bites_month_5", "bites_month_6",
"bites_month_7", "bites_month_8")
grid_len <- 100
p_grid <- seq( from=0, to=1, length.out= grid_len)
prior <- dnorm(p_grid, 0.6, 0.05)
posteriors <- c()
counted.months <- c()
p_grids <- rep(p_grid, 4)
for (n in c(1, 2, 4, 8)) {
x <- sum(dataMordidas[, cols[1:n]])# total de mordidas
likelihood <- dbinom(x, n * nrow(dataMordidas), p_grid)
unstd.posterior <- likelihood *prior
posterior <- unstd.posterior / sum(unstd.posterior)
posteriors <- c(posteriors, posterior)
counted.months <- c(counted.months, rep(n, grid_len))
}
post.df <- data.frame("grid"=p_grids, "posterior"=posteriors, "months"=counted.months)
ggplot(post.df) +
geom_line(aes(x=grid, y=posterior)) +
facet_grid(months ~ .)
for (n in c(1, 2, 4, 8)) {
res <- quap(
alist(
W ~  dbinom (W+L, p) ,  # binomial likelihood
p ~  dunif(0,1)# uniform pior
),
data = list(W=sum(dataMordidas[, cols[1:n]]),L=n*250-sum(dataMordidas[, cols[1:n]])) )
df <- precis(res)
curve(dnorm(x, df$mean, df$sd), lty=2, add=FALSE)
}
quantile(samples, c(0.25, 0.75))
PI(samples, 0.5)
quantile(samples, c(0.25, 0.75))
PI(samples, 0.5)
HPDI(samples, 0.95)
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Carteros mordidos en el segundo mes dado que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_primer_mes <- length(mordidos_primer_mes)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
posterior <- mordidos_condicionados / total_mordidos_primer_mes
# Simulación de 10,000 réplicas
simulaciones <- rbinom(1e4, size = total_mordidos_primer_mes, prob = posterior)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_condicionados), color="red")
# Manipulación de estructuras
library(tidyverse)
library(dplyr)
library(tidyr)
library(purrr)
# Para realizar plots
library(scatterplot3d)
library(ggplot2)
library(plotly)
# Manipulación de varios plots en una imagen.
library(gridExtra)
# Análisis bayesiano
library("rethinking")
dataMordidas <- read.csv("no_mordidas.csv", header = TRUE)
cols <- c("bites_month_1", "bites_month_2", "bites_month_3",
"bites_month_4", "bites_month_5", "bites_month_6",
"bites_month_7", "bites_month_8")
grid_len <- 100
p_grid <- seq( from=0, to=1, length.out= grid_len)
prior <- dnorm(p_grid, 0.6, 0.05)
posteriors <- c()
counted.months <- c()
p_grids <- rep(p_grid, 4)
for (n in c(1, 2, 4, 8)) {
x <- sum(dataMordidas[, cols[1:n]])# total de mordidas
likelihood <- dbinom(x, n * nrow(dataMordidas), p_grid)
unstd.posterior <- likelihood *prior
posterior <- unstd.posterior / sum(unstd.posterior)
posteriors <- c(posteriors, posterior)
counted.months <- c(counted.months, rep(n, grid_len))
}
post.df <- data.frame("grid"=p_grids, "posterior"=posteriors, "months"=counted.months)
ggplot(post.df) +
geom_line(aes(x=grid, y=posterior)) +
facet_grid(months ~ .)
prior <- rep(1, grid_len)
posteriors <- c()
for (n in c(1, 2, 4, 8)) {
x <- sum(dataMordidas[, cols[1:n]])
likelihood <- dbinom(x, n * nrow(dataMordidas), p_grid)
unstd.posterior <- likelihood *prior
posterior <- unstd.posterior / sum(unstd.posterior)
posteriors <- c(posteriors, posterior)
}
post.df$posterior2 <- posteriors
ggplot(post.df) +
geom_line(aes(x=grid, y=posterior)) +
geom_line(aes(x=grid, y=posterior2), color="red") +
facet_grid(months ~ .)
for (n in c(1, 2, 4, 8)) {
res <- quap(
alist(
W ~  dbinom (W+L, p) ,  # binomial likelihood
p ~  dunif(0,1)# uniform pior
),
data = list(W=sum(dataMordidas[, cols[1:n]]),L=n*250-sum(dataMordidas[, cols[1:n]])) )
df <- precis(res)
curve(dnorm(x, df$mean, df$sd), lty=2, add=FALSE)
}
grid_len <- 1000
p_grid <- seq( from=0, to=1, length.out= grid_len)
prior <- rep(1, grid_len)
likelihood <- dbinom(6, 10 , p_grid)
unstd.posterior <- likelihood *prior
posterior <- unstd.posterior/sum(unstd.posterior)
samples <- sample(p_grid, prob=posterior, size=1e4, replace=TRUE)
dens(samples)
# fracción de valores <0.35
sum(posterior [p_grid < 0.35])
# fracción de valores <0.35
sum(posterior [p_grid < 0.35])
# Número total de carteros y datos observados
num_carteros <- nrow(dataMordidas)
num_meses <- 8
total_mordidas <- sum(dataMordidas[, cols])  # Suma total de mordidas observadas
# Ratio real de mordidas
ratio.real <- total_mordidas / (num_carteros )
samples.sim <-  rbinom(1e4, 10, prob= samples)
ggplot() +
geom_density(aes(samples.sim)) +
geom_vline(aes(xintercept=ratio.real), color="red")
# Se escogen el mes 5 y 6
primer_mes <- dataMordidas$bites_month_5
segundo_mes <- dataMordidas$bites_month_6
# Carteros que fueron mordidos en el primer mes
mordidos_primer_mes <- which(primer_mes == 1)
# Carteros mordidos en el segundo mes dado que fueron mordidos en el primero
mordidos_condicionados <- sum(segundo_mes[mordidos_primer_mes])
# Número total de carteros mordidos en el primer mes
total_mordidos_primer_mes <- length(mordidos_primer_mes)
# Probabilidad posterior de ser mordido nuevamente en el segundo mes
posterior <- mordidos_condicionados / total_mordidos_primer_mes
# Simulación de 10,000 réplicas
simulaciones <- rbinom(1e4, size = total_mordidos_primer_mes, prob = posterior)
ggplot() +
geom_density(aes(simulaciones)) +
geom_vline(aes(xintercept=mordidos_condicionados), color="red")
