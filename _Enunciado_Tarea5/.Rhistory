xlab = "x", breaks = 50, col = "lightblue")
}
alpha <- 5
beta <- 1/5
beta_0 <- 1
iteraciones_list <- c(100, 1000, 10000, 1e5, 1e6)
for (reps in iteraciones_list) {
muestras <- metropolis_hasting(beta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Iteraciones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
}
alpha <- 5
beta <- 1/5
beta_0 <- 1
iteraciones_list <- c(100, 1000, 10000, 1e5, 1e6)
par(mfrow = c(2, 2))
for (reps in iteraciones_list) {
muestras <- metropolis_hasting(beta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Iteraciones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Iteraciones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Iteraciones:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 100)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 20)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
}
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hastings(theta0, reps, alpha = alpha, beta)
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve((x^(alpha - 1) * exp(-beta * x)) / gamma(alpha) / beta^alpha,
add = TRUE, col = "red", lwd = 2, lty = 2)
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "darkgreen", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución real", "MCMC"), col = c("darkgreen", "red"),
lty = c(1, 2), lwd = 2)
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
gamma_vect <- rgamma(1e6, shape = 5, rate = 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve((x^(alpha - 1) * exp(-beta * x)) / gamma(alpha) / beta^alpha,
add = TRUE, col = "red", lwd = 2, lty = 2)
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "darkgreen", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución real", "MCMC"), col = c("darkgreen", "red"),
lty = c(1, 2), lwd = 2)
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
gamma_vect <- rgamma(1e6, shape = 5, rate = 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Graficar
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
gamma_vect <- rgamma(1e6, shape = 5, rate = 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Distribución no normalizada
gamma_vect <- metropolis(1, 1e6, 5, 0.2)
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
gamma_vect <- rgamma(1e6, shape = 5, rate = 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Distribución no normalizada
gamma_vect <- metropolis_hasting(1, 1e6, 5, 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Graficar
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
gamma_vect <- rgamma(1e6, shape = 5, rate = 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Distribución no normalizada
gamma_vect <- metropolis_hasting(4, 1e6, 5, 0.2)
hist(gamma_vect, xlim = range(c(0, 120)))
# Graficar
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve((x^(alpha - 1) * exp(-beta * x)) / gamma(alpha) / beta^alpha,
add = TRUE, col = "red", lwd = 2, lty = 2)
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "darkgreen", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución real", "MCMC"), col = c("darkgreen", "red"),
lty = c(1, 2), lwd = 2)
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "darkgreen", lwd = 2, lty = 1)
}
# Cargar la librería
library(dagitty)
library(ggdag)
library(ggplot2)
# Crear la DAG
dag <- dagitty("
dag {
Inteligencia -> Educacion -> Ingresos
Inteligencia -> Oportunidades -> Ingresos
Esfuerzo -> Ingresos
}
")
ggdag::ggdag(dag) +
ggtitle("DAG") +
theme_dark()
# Primeramente se define la función de densidad gamma
gamma_dens <- function(x, alpha, beta){
if(x > 0){
return(x^(alpha-1)*exp(-beta*x))
}
else{
return(0)
}
}
# Ahora se define el algoritmo de Metropolis Hasting con la función gamma anterior
metropolis_hasting <- function(theta_0, reps, alpha, beta){
thetas <- vector(length = reps )
current <- theta_0
for ( i in 2:reps ) {
thetas[i-1] <- current
# distribución propuesta
propuesta <- rnorm(1, mean = thetas[i-1], 1)
# densidad gamma de la distribución propuesta
gamma_propuesta <- gamma_dens(propuesta, alpha, beta)
# densidad gamma de la distribución actual
gamma_actual <- gamma_dens(thetas[i-1], alpha, beta)
# Calculo del ratio
ratio <- gamma_propuesta/gamma_actual
# Probabilidad de aceptar
prob <- min(ratio,1)
decision <- rbinom(1,1,prob)
current <- ifelse( decision == 1 , propuesta , current )
}
return(thetas)
}
alpha <- 5
beta <- 1/5
beta_0 <- 1
iteraciones_list <- c(100, 1000, 10000, 1e5, 1e6)
par(mfrow = c(2, 2))
for (reps in iteraciones_list) {
muestras <- metropolis_hasting(beta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Iteraciones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
}
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
alpha <- 5
beta <- 1/5
beta_0 <- 1
iteraciones_list <- c(100, 1000, 10000, 1e5, 1e6)
par(mfrow = c(2, 2))
for (reps in iteraciones_list) {
muestras <- metropolis_hasting(beta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Iteraciones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve((x^(alpha - 1) * exp(-beta * x)) / gamma(alpha) / beta^alpha,
add = TRUE, col = "red", lwd = 2, lty = 2)
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "darkgreen", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución real", "MCMC"), col = c("darkgreen", "red"),
lty = c(1, 2), lwd = 2)
reps <- 1e5
betas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (beta in betas_list) {
muestras <- metropolis_hasting(beta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("beta inicial:", beta),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve((x^(alpha - 1) * exp(-beta * x)) / gamma(alpha) / beta^alpha,
add = TRUE, col = "red", lwd = 2, lty = 2)
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "darkgreen", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución real", "MCMC"), col = c("darkgreen", "red"),
lty = c(1, 2), lwd = 2)
theta0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta0, reps, alpha = alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución real"), col = c("red"),
lty = c(1, 2), lwd = 2)
# Primeramente se define la función de densidad gamma
gamma_dens <- function(x, alpha, beta){
if(x > 0){
return(x^(alpha-1)*exp(-beta*x))
}
else{
return(0)
}
}
# Ahora se define el algoritmo de Metropolis Hasting con la función gamma anterior
metropolis_hasting <- function(theta_0, reps, alpha, beta){
thetas <- vector(length = reps )
current <- theta_0
for ( i in 2:reps ) {
thetas[i-1] <- current
# distribución propuesta
propuesta <- rnorm(1, mean = thetas[i-1], 1)
# densidad gamma de la distribución propuesta
gamma_propuesta <- gamma_dens(propuesta, alpha, beta)
# densidad gamma de la distribución actual
gamma_actual <- gamma_dens(thetas[i-1], alpha, beta)
# Calculo del ratio
ratio <- gamma_propuesta/gamma_actual
# Probabilidad de aceptar
prob <- min(ratio,1)
decision <- rbinom(1,1,prob)
current <- ifelse( decision == 1 , propuesta , current )
}
return(thetas)
}
alpha <- 5
beta <- 1/5
beta_0 <- 1
reps_list <- c(100, 1000, 10000, 1e5, 1e6)
par(mfrow = c(2, 2))
for (reps in reps_list) {
muestras <- metropolis_hasting(beta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Repeticiones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
alpha <- 5
beta <- 1/5
beta_0 <- 1
reps_list <- c(100, 1000, 10000, 1e5, 1e6)
par(mfrow = c(2, 2))
for (reps in reps_list) {
muestras <- metropolis_hasting(beta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Repeticiones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
reps <- 1e5
# Variación de los thetas
thetas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (theta in thetas_list) {
muestras <- metropolis_hasting(theta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("theta inicial:", theta),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
theta_0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta_0, reps, alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución  gamma real"), col = c("red"),
lty = c(1, 2), lwd = 2)
theta_0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta_0, reps, alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución  gamma real"), col = c("red"),
lty = c(1, 2), lwd = 2)
# Cargar la librería
library(dagitty)
library(ggdag)
library(ggplot2)
# Crear la DAG
dag <- dagitty("
dag {
Inteligencia -> Educacion -> Ingresos
Inteligencia -> Oportunidades -> Ingresos
Esfuerzo -> Ingresos
}
")
ggdag::ggdag(dag) +
ggtitle("DAG") +
theme_dark()
# Cargar la librería
library(dagitty)
library(ggdag)
library(ggplot2)
# Crear la DAG
dag <- dagitty("
dag {
Inteligencia -> Educacion -> Ingresos
Inteligencia -> Oportunidades -> Ingresos
Esfuerzo -> Ingresos
}
")
ggdag::ggdag(dag) +
ggtitle("DAG") +
theme_dark()
# Cargar la librería
library(dagitty)
library(ggdag)
library(ggplot2)
# Crear la DAG
dag <- dagitty("
dag {
Inteligencia -> Educacion -> Ingresos
Inteligencia -> Oportunidades -> Ingresos
Esfuerzo -> Ingresos
}
")
ggdag::ggdag(dag) +
ggtitle("DAG") +
theme_dark()
# Cargar la librería
library(dagitty)
library(ggdag)
library(ggplot2)
# Crear la DAG
dag <- dagitty("
dag {
Inteligencia -> Educacion -> Ingresos
Inteligencia -> Oportunidades -> Ingresos
Esfuerzo -> Ingresos
}
")
ggdag::ggdag(dag) +
ggtitle("DAG") +
theme_dark()
# Cargar la librería
library(dagitty)
library(ggdag)
library(ggplot2)
# Crear la DAG
dag <- dagitty("
dag {
Inteligencia -> Educacion -> Ingresos
Inteligencia -> Oportunidades -> Ingresos
Esfuerzo -> Ingresos
}
")
ggdag::ggdag(dag) +
ggtitle("DAG") +
theme_dark()
# Primeramente se define la función de densidad gamma
gamma_dens <- function(x, alpha, beta){
if(x > 0){
return(x^(alpha-1)*exp(-beta*x))
}
else{
return(0)
}
}
# Ahora se define el algoritmo de Metropolis Hasting con la función gamma anterior
metropolis_hasting <- function(theta_0, reps, alpha, beta){
thetas <- vector(length = reps )
current <- theta_0
for ( i in 2:reps ) {
thetas[i-1] <- current
# distribución propuesta
propuesta <- rnorm(1, mean = thetas[i-1], 1)
# densidad gamma de la distribución propuesta
gamma_propuesta <- gamma_dens(propuesta, alpha, beta)
# densidad gamma de la distribución actual
gamma_actual <- gamma_dens(thetas[i-1], alpha, beta)
# Calculo del ratio
ratio <- gamma_propuesta/gamma_actual
# Probabilidad de aceptar
prob <- min(ratio,1)
decision <- rbinom(1,1,prob)
current <- ifelse( decision == 1 , propuesta , current )
}
return(thetas)
}
alpha <- 5
beta <- 1/5
theta_0 <- 1
# Variación de las reps
reps_list <- c(100, 1000, 10000, 1e5, 1e6)
par(mfrow = c(2, 2))
# Graficando
for (reps in reps_list) {
muestras <- metropolis_hasting(theta_0, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("Repeticiones:", reps),
xlab = "x", breaks = 50, col = "lightblue")
#Para comparar con la distribución gamma real
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
reps <- 1e5
# Variación de los thetas
thetas_list <- c(1, 2, 3, 4, 5, 6, 7, 8)
par(mfrow = c(2, 2))
for (theta in thetas_list) {
muestras <- metropolis_hasting(theta, reps, alpha, beta)
hist(muestras, probability = TRUE, main = paste("theta inicial:", theta),
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
}
theta_0 <- 4
reps <- 1e6
muestras <- metropolis_hasting(theta_0, reps, alpha, beta)
# Graficar
hist(muestras, probability = TRUE, main = "Comparación con la distribución real",
xlab = "x", breaks = 50, col = "lightblue")
curve(dgamma(x, shape = alpha, rate = beta), add = TRUE, col = "red", lwd = 2, lty = 1)
legend("topright", legend = c("Distribución  gamma real"), col = c("red"),
lty = c(1, 2), lwd = 2)
